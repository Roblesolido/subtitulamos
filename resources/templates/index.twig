{% extends "base.twig" %}
{% block search %}{# Do not display top search here #}{% endblock %}

{% block content %}
	<div class='main_container'>
		<div id="main_state">
			<div id="logo"></div>
			<div id="website_name">subtitulamos.tv</div>
			<div id="website_title">- LEMA O VACÍO -</div>
		</div>
		<div id="search">
			<div id="white_logo_searchbar" class="white_logo hidden"></div>
			<input type="text" placeholder="Busca una serie... Ejemplo: Game of Thrones 7x01" id="search_bar" />
			<div id="search_subtitles_button" title="Buscar"><i id="search_subtitles" class="fa fa-search" aria-hidden="true"></i></div>
			<ul id="search-results" class='hidden'></ul>
		</div>
		<div id="category_navigation_list">
			<div id="category_navigation_title">...o explora las siguientes categorías</div>
			<span class="hint--top hint--bounce hint--rounded" data-hint="Los subtítulos más buscados"><div class="category_navigation_item" id="most_downloaded">Lo más descargado</div></span>
			<span class="hint--top hint--bounce hint--rounded" data-hint="Últimos subtítulos subidos"><div class="category_navigation_item" id="last_uploaded">Últimas subidas</div></span>
			<span class="hint--top hint--bounce hint--rounded" data-hint="Últimas traducciones completadas"><div class="category_navigation_item" id="last_completed">Últimas traducciones</div></span>
			<span class="hint--top hint--bounce hint--rounded" data-hint="Últimas modificaciones"><div class="category_navigation_item" id="last_edited">Últimas ediciones</div></span>
		</div>
		{% verbatim %}
		<div id="incategory_state" class="hidden">
			<div id="incategory_board">
				<table class="clip_global_info" v-for="ep in episodes">
					<tr class="clip_info_row fade_slide_in" :data-target="subURI(ep)">
						<td class="clip_downloads" v-if="ep.download_count">
							<div class="clip_downloads_times">{{ ep.download_count }}</div>
							<div class="clip_downloads_text">descargas</div>
						</td>
						<td class="clip_activity_since" v-if="ep.upload_time">
							<div class="clip_row_text_faded">hace</div>
							<div class="clip_row_time">{{ ep.time_ago }}</div>
							<div class="clip_row_text">{{ ep.time_unit }}</div>
						</td>
						<td class="visual_separator"></td>
						<td class="clip_title_row">
							<div class="clip_title">{{ ep.name }}</div>
							<div class="clip_add_details">
								<div class="clip_language">{{ ep.lang_name }}</div>
								<div class="new_season" v-if="ep.new_season">Nueva Temporada</div>
								<div class="new_series" v-if="ep.new_series">Nueva Serie</div>
							</div>
						</td>
					</tr>
				</table>
			</div>
		</div>
		{% endverbatim %}
	</div>
{% endblock %}

{% block scripts %}
	<script>
		let episodeList = new Vue({
			el: "#incategory_board",
			data: {
				episodes: [],
			}, methods: {
				subURI: function(ep) {
					return "/episodes/"+ep.id+"/"+ep.slug;
				},

				update: function() {
					let self = this;
					let u = function() {
						self.episodes.forEach(function(ep, idx, arr) {
							diff = dateDiff(new Date(ep.upload_time), new Date(Date.now()))/1000;
							if(diff >= 60) {
								diff = Math.floor(diff / 60);
								if(diff >= 60) {
									diff = Math.floor(diff / 60);
									if(diff >= 24) {
										diff = Math.floor(diff / 24);
										unit = diff > 1 ? "días" : "día";
									} else {
										unit = diff > 1 ? "horas" : "hora";
									}
								} else {
									unit = diff > 1 ? "mins" : "min";
								}
							} else {
								// < 60s, display every 10s
								diff = Math.floor(diff/10) * 10;
								unit = "seg";
							}

							if(diff != ep.time_ago) {
								ep.time_ago = diff;
								ep.time_unit = unit;
								arr[idx] = ep;
							}
						});
					};
					
					u(); // Insta update times
					this.interval = setInterval(u, 2000);
				}
			}, watch: {
				episodes: function(newEpisodes) {
					clearInterval(this.interval);
					this.update();
				}
			}
		});

	</script>
{% endblock %}